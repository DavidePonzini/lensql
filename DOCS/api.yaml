openapi: 3.0.4
info:
  title: LensQL
  description: |-
    LensQL is an interactive AI assistant that helps learners uncover why their SQL queries behave the way they do.
    Instead of providing answers, LensQL guides students to discover solutions through constructive feedback and minimal examples.
  contact:
    email: davide.ponzini@edu.unige.it
  version: 1.0.0

servers:
  - url: /api/

paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: login with username/password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  success:
                    type: boolean
  /auth/register:
    post:
      tags:
        - auth
      summary: register a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                school:
                  type: string
      responses:
        '200':
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /auth/reset-password:
    post:
      tags:
        - auth
      summary: set new password for username
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
      responses:
        '200':
          description: Password reset successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /classes:
    get:
      tags:
        - classes
      summary: list classes
      responses:
        '200':
          description: A list of classes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    class_id:
                      type: string
                    title:
                      type: string
      security:
        - auth: []
    post:
      tags:
        - classes
      summary: create new class
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
      responses:
        '200':
          description: Class created successfully

components:

  securitySchemes:
      auth:
        type: http
        scheme: bearer
        bearerFormat: JWT