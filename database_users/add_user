#!/bin/bash
# This script creates a new PostgreSQL user and database with the same name.
# It also revokes the user's access to the default databases (postgres, template1, template0)

if [ "$#" -ne 1 ]; then
    echo "Usage: $0 <username> [<password>]"
    exit 1
fi

username="$1"

if [ -z "$username" ]; then
    echo "Username cannot be empty."
    exit 1
fi

if [ -z "$2" ]; then
    password="$username"
else
    password="$2"
fi

# Check if the database already exists
if psql -U postgres -lqt | cut -d \| -f 1 | grep -qw "$username"; then
    echo "Database '$username' already exists. Skipping creation."
    exit 0
fi

psql -U postgres -c "CREATE DATABASE $username;"
psql -U postgres -c "CREATE USER $username WITH PASSWORD '$password';"
psql -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE $username TO $username;"

psql -U postgres -c "REVOKE CONNECT ON DATABASE postgres FROM $username;"
psql -U postgres -c "REVOKE CONNECT ON DATABASE template1 FROM $username;"
psql -U postgres -c "REVOKE CONNECT ON DATABASE template0 FROM $username;"

psql -U postgres "$username" -c "ALTER SCHEMA public OWNER TO $username;"

echo "Created database and user '$username'."