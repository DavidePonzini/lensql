openapi: 3.0.4

info:
  title: LensQL
  description: |-
    LensQL is an interactive AI assistant that helps learners uncover why their SQL queries behave the way they do.
    Instead of providing answers, LensQL guides students to discover solutions through constructive feedback and minimal examples.
  contact:
    email: davide.ponzini@edu.unige.it

servers:
  - url: /api/

paths:
  /auth/login:
    post:
      tags:
        - auth
      summary: login with username/password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  refresh_token:
                    type: string
                  success:
                    type: boolean
  /auth/register:
    post:
      tags:
        - auth
      summary: register a new account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                school:
                  type: string
      responses:
        "200":
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /auth/change-password:
    post:
      tags:
        - auth
      summary: set new password for username
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old_password:
                  type: string
                new_password:
                  type: string
      responses:
        "200":
          description: Password changed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
  /auth/refresh:
    post:
      tags:
        - auth
      summary: refresh access token using refresh token
      responses:
        "200":
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string

  /classes:
    get:
      tags:
        - classes
      summary: list classes visible to the user
      description: Returns a list of classes that the user is part of, either as a teacher or a student.
      parameters:
      security:
        - auth: []
      responses:
        "200":
          description: A list of classes
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    class_id:
                      type: string
                    title:
                      type: string
                    participants:
                      type: integer
                    exercises:
                      type: integer
                    queries:
                      type: integer
                    is_teacher:
                      type: boolean
    post:
      tags:
        - classes
      summary: create new class
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                dataset:
                  type: string
      responses:
        "200":
          description: Class created successfully
    put:
      tags:
        - classes
      summary: update class title or dataset
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                class_id:
                  type: string
                title:
                  type: string
                dataset:
                  type: string
      responses:
        "200":
          description: Class renamed successfully
  /classes/get:
    get:
      tags:
        - classes
      summary: get class data
      security:
        - auth: []
      parameters:
        - in: query
          name: class_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the class with the given id
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                      dataset:
                        type: string
  /classes/join:
    post:
      tags:
        - classes
      summary: join a class
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                class_id:
                  type: string
      responses:
        "200":
          description: Successfully joined class
  /classes/leave:
    post:
      tags:
        - classes
      summary: leave a class, if the user is not a teacher or the class has no data associated with it
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                class_id:
                  type: string
      responses:
        "200":
          description: Successfully left class
  /classes/is-teacher:
    get:
      tags:
        - classes
      summary: is the user a teacher for this class?
      security:
        - auth: []
      parameters:
        - in: query
          name: class_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns whether the user is a teacher for the class
          content:
            application/json:
              schema:
                type: object
                properties:
                  is_teacher:
                    type: boolean
  /classes/set-teacher:
    post:
      tags:
        - classes
      summary: set/unset participant as teacher
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                class_id:
                  type: string
                username:
                  type: string
                value:
                  type: boolean
      responses:
        "200":
          description: Teacher status updated successfully
  /classes/members:
    get:
      tags:
        - classes
      summary: get participants in this class and their teacher status
      security:
        - auth: []
      parameters:
        - in: query
          name: class_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of class members with their teacher status
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    username:
                      type: string
                    is_teacher:
                      type: boolean

  /exercises:
    get:
      tags:
        - exercises
      summary: list exercises in class
      security:
        - auth: []
      parameters:
        - in: query
          name: class_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of exercises in the class
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        exercise_id:
                          type: string
                        title:
                          type: string
                        request:
                          type: string
                        is_ai_generated:
                          type: boolean
                        is_hidden:
                          type: boolean
                        submitted:
                          type: boolean
                        learning_objectives:
                          type: array
                          items:
                            type: object
                            properties:
                              objective:
                                type: string
                              description:
                                type: string
    post:
      tags:
        - exercises
      summary: create new exercise in class
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                class_id:
                  type: string
                title:
                  type: string
                request:
                  type: string
                solution:
                  type: string
      responses:
        "200":
          description: Exercise created successfully
    put:
      tags:
        - exercises
      summary: update exercise in class
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exercise_id:
                  type: string
                title:
                  type: string
                request:
                  type: string
                solution:
                  type: string
      responses:
        "200":
          description: Exercise updated successfully
    delete:
      tags:
        - exercises
      summary: delete exercise in class
      description: exercise can only be deleted if no queries are associated with it and it's not assigned to any student
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exercise_id:
                  type: string
      responses:
        "200":
          description: Exercise deleted successfully
  /exercises/get:
    get:
      tags:
        - exercises
      summary: get exercise data
      security:
        - auth: []
      parameters:
        - in: query
          name: exercise_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the exercise with the given id
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      title:
                        type: string
                      request:
                        type: string
                      solution:
                        type: string
                      class_id:
                        type: string
  /exercises/submit:
    post:
      tags:
        - exercises
      summary: mark exercise as submitted
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exercise_id:
                  type: string
      responses:
        "200":
          description: Exercise marked as submitted successfully
  /exercises/unsubmit:
    post:
      tags:
        - exercises
      summary: mark exercise as not submitted
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exercise_id:
                  type: string
      responses:
        "200":
          description: Exercise marked as not submitted successfully
  /exercises/hide:
    post:
      tags:
        - exercises
      summary: hide exercise from students
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exercise_id:
                  type: string
                value:
                  type: boolean
      responses:
        "200":
          description: Exercise visibility updated successfully
  /exercises/objectives:
    get:
      tags:
        - exercises
      summary: list objectives for exercise
      security:
        - auth: []
      parameters:
        - in: query
          name: exercise_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: A list of objectives for the exercise
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    objective:
                      type: string
                    description:
                      type: string
    post:
      tags:
        - exercises
      summary: set/unset objective for exercise
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exercise_id:
                  type: string
                objective:
                  type: string
                value:
                  type: boolean
      responses:
        "200":
          description: Objective status updated successfully
  /exercises/init-dataset:
    post:
      tags:
        - exercises
      summary: initialize dataset for exercise
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                exercise_id:
                  type: string
                dataset_name:
                  type: string
      responses:
        "200":
          description: Dataset initialized successfully

  /exercises/dataset:
    get:
      tags:
        - exercises
      summary: get a dataset by class id
      security:
        - auth: []
      parameters:
        - in: query
          name: class_id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Returns the dataset with the given name
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: string
    post:
      tags:
        - exercises
      summary: set a new dataset for a class
      security:
        - auth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                class_id:
                  type: string
                dataset:
                  type: string
      responses:
        "200":
          description: Dataset set successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string

components:
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
